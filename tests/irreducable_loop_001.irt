--TEST--
001: irreducabe loop
--ARGS--
--save --save-cfg --dump-after-loop
--CODE--
{
	uintptr_t c_1 = 0;
	bool c_2 = 0;
	bool c_3 = 1;
	l_1 = START(l_40);
	l_2 = END(l_1);
	l_3 = LOOP_BEGIN(l_2, l_32);
	uintptr_t d_4, l_4 = RLOAD(l_3, 14);
	l_5 = IF(l_4, d_4);
	l_6 = IF_TRUE(l_5);
	uintptr_t d_7, l_7 = RLOAD(l_6, 14);
	l_8 = IF(l_7, d_7);
	l_9 = IF_TRUE(l_8);
	l_10 = END(l_9);
	l_11 = IF_FALSE(l_8);
	l_12 = END(l_11);
	l_13 = IF_FALSE(l_5);
	uint32_t d_14, l_14 = RLOAD(l_13, 15);
	l_15 = IF(l_14, d_14);
	l_16 = IF_FALSE(l_15);
	l_17 = END(l_16);
	l_18 = LOOP_BEGIN/3(l_17, l_25, l_34);
	uint32_t d_19, l_19 = RLOAD(l_18, 15);
	l_20 = IF(l_19, d_19);
	l_21 = IF_FALSE(l_20);
	uintptr_t d_22, l_22 = RLOAD(l_21, 14);
	l_23 = IF(l_22, d_22);
	l_24 = IF_TRUE(l_23, 1);
	l_25 = LOOP_END(l_24);
	l_26 = IF_FALSE(l_23);
	l_27 = END(l_26);
	l_28 = MERGE(l_10, l_27);
	uintptr_t d_29, l_29 = RLOAD(l_28, 14);
	l_30 = IF(l_29, d_29);
	l_31 = IF_TRUE(l_30);
	l_32 = LOOP_END(l_31);
	l_33 = IF_FALSE(l_30);
	l_34 = LOOP_END(l_33);
	l_35 = IF_TRUE(l_15);
	l_36 = END(l_35);
	l_37 = IF_TRUE(l_20);
	l_38 = END(l_37);
	l_39 = MERGE/3(l_12, l_36, l_38);
	l_40 = RETURN(l_39, null);
}
--EXPECT--
{
	uintptr_t c_1 = 0;
	bool c_2 = 0;
	bool c_3 = 1;
#BB1: end=l_2, succ(1)=[BB2]
	l_1 = START(l_40);
	l_2 = END(l_1);
#BB2: end=l_5, idom=BB1(1), loop=HDR(1), pred(2)=[BB1, BB13], succ(2)=[BB3, BB6]
	l_3 = LOOP_BEGIN(l_2, l_32);
	uintptr_t d_4, l_4 = RLOAD(l_3, 14);
	l_5 = IF(l_4, d_4);
#BB3: end=l_8, idom=BB2(2), loop=BB2(1), pred(1)=[BB2], succ(2)=[BB4, BB5]
	l_6 = IF_TRUE(l_5);
	uintptr_t d_7, l_7 = RLOAD(l_6, 14);
	l_8 = IF(l_7, d_7);
#BB4: end=l_10, idom=BB3(3), loop=BB2(1), pred(1)=[BB3], succ(1)=[BB12]
	l_9 = IF_TRUE(l_8);
	l_10 = END(l_9);
#BB5: end=l_12, idom=BB3(3), pred(1)=[BB3], succ(1)=[BB17]
	l_11 = IF_FALSE(l_8);
	l_12 = END(l_11);
#BB6: end=l_15, idom=BB2(2), pred(1)=[BB2], succ(2)=[BB7, BB15]
	l_13 = IF_FALSE(l_5);
	uint32_t d_14, l_14 = RLOAD(l_13, 15);
	l_15 = IF(l_14, d_14);
#BB7: end=l_17, idom=BB6(3), pred(1)=[BB6], succ(1)=[BB8]
	l_16 = IF_FALSE(l_15);
	l_17 = END(l_16);
#BB8: end=l_20, idom=BB2(2), loop=HDR,BB12(2), IRREDUCIBLE, pred(3)=[BB7, BB10, BB14], succ(2)=[BB9, BB16]
	l_18 = LOOP_BEGIN/3(l_17, l_25, l_34);
	uint32_t d_19, l_19 = RLOAD(l_18, 15);
	l_20 = IF(l_19, d_19);
#BB9: end=l_23, idom=BB8(3), loop=BB8(2), pred(1)=[BB8], succ(2)=[BB10, BB11]
	l_21 = IF_FALSE(l_20);
	uintptr_t d_22, l_22 = RLOAD(l_21, 14);
	l_23 = IF(l_22, d_22);
#BB10: end=l_25, idom=BB9(4), loop=BB8(2), pred(1)=[BB9], succ(1)=[BB8]
	l_24 = IF_TRUE(l_23, 1);
	l_25 = LOOP_END(l_24);
#BB11: end=l_27, idom=BB9(4), loop=BB12(2), pred(1)=[BB9], succ(1)=[BB12]
	l_26 = IF_FALSE(l_23);
	l_27 = END(l_26);
#BB12: end=l_30, idom=BB2(2), loop=HDR,BB2(2), IRREDUCIBLE, pred(2)=[BB4, BB11], succ(2)=[BB13, BB14]
	l_28 = LOOP_BEGIN(l_10, l_27);
	uintptr_t d_29, l_29 = RLOAD(l_28, 14);
	l_30 = IF(l_29, d_29);
#BB13: end=l_32, idom=BB12(3), loop=BB2(1), pred(1)=[BB12], succ(1)=[BB2]
	l_31 = IF_TRUE(l_30);
	l_32 = LOOP_END(l_31);
#BB14: end=l_34, idom=BB12(3), loop=BB12(2), pred(1)=[BB12], succ(1)=[BB8]
	l_33 = IF_FALSE(l_30);
	l_34 = LOOP_END(l_33);
#BB15: end=l_36, idom=BB6(3), pred(1)=[BB6], succ(1)=[BB17]
	l_35 = IF_TRUE(l_15);
	l_36 = END(l_35);
#BB16: end=l_38, idom=BB8(3), pred(1)=[BB8], succ(1)=[BB17]
	l_37 = IF_TRUE(l_20);
	l_38 = END(l_37);
#BB17: end=l_40, idom=BB2(2), pred(3)=[BB5, BB15, BB16]
	l_39 = MERGE/3(l_12, l_36, l_38);
	l_40 = RETURN(l_39, null);
}
